
<!-- ========================================================================================================-->

<!-- Navbar claude
Navigation.svelte:  -->


<script lang="ts">
  import { Navigation } from '@skeletonlabs/skeleton-svelte';
  import IconMenu from '@lucide/svelte/icons/menu';
  import IconFolder from '@lucide/svelte/icons/folder';
  import IconMusic from '@lucide/svelte/icons/music';
  import IconVideo from '@lucide/svelte/icons/video';
  import IconGames from '@lucide/svelte/icons/gamepad';
  import IconSettings from '@lucide/svelte/icons/settings';
  import User from '@lucide/svelte/icons/user-round';
  import { push } from 'svelte-spa-router';
  import Routes from "./routes/Routes.svelte";

  let isExpansed = false;
  let isMobile = false;

  // Check if mobile on mount and window resize
  function checkMobile() {
    isMobile = window.innerWidth < 768;
    if (!isMobile) {
      isExpansed = true; // default open for laptops/tabs
    } else {
      isExpansed = false; // default closed for mobile
    }
  }

  // Initialize on mount
  if (typeof window !== 'undefined') {
    checkMobile();
    window.addEventListener('resize', checkMobile);
  }

  function toggleExpanded() {
    isExpansed = !isExpansed;
  }

  // Close sidebar when clicking on mobile nav items
  function handleMobileNavClick(callback: () => void) {
    callback();
    if (isMobile) {
      isExpansed = false;
    }
  }

  // Close sidebar when clicking overlay
  function handleOverlayClick() {
    if (isMobile && isExpansed) {
      isExpansed = false;
    }
  }
</script>

{#if isMobile}
  <!-- MOBILE LAYOUT -->
  <div class="relative w-full h-full bg-green-200">
    <!-- Mobile Overlay -->
    {#if isExpansed}
      <!-- svelte-ignore a11y-click-events-have-key-events -->
      <!-- svelte-ignore a11y-no-static-element-interactions -->
      <div 
        class="fixed inset-0 bg-black-200 bg-opacity-25 z-40 transition-opacity duration-300"
        on:click={handleOverlayClick}
      ></div>
    {/if}

    <!-- Mobile Sidebar - Always Fixed -->
    <div class={`
      fixed left-0 top-0 h-full z-50 transform transition-transform duration-300
      ${isExpansed ? 'translate-x-0' : '-translate-x-full'}
    `}>
      <Navigation.Rail expanded={isExpansed}>
        {#snippet header()}
          <Navigation.Tile labelExpanded="Menu" onclick={toggleExpanded} title="Toggle Menu Width">
            <IconMenu />
          </Navigation.Tile>
        {/snippet}

        {#snippet tiles()}
          <Navigation.Tile 
            labelExpanded="Browse Files" 
            onclick={() => handleMobileNavClick(() => push('/files'))}
          >
            <IconFolder />
          </Navigation.Tile>

          <Navigation.Tile 
            labelExpanded="User Details" 
            onclick={() => handleMobileNavClick(() => push('/user'))}
          >
            <User />
          </Navigation.Tile>

          <Navigation.Tile 
            labelExpanded="Developer testimonials" 
            onclick={() => handleMobileNavClick(() => push('/testimonials'))}
          >
            <IconMusic />
          </Navigation.Tile>

          <Navigation.Tile 
            labelExpanded="Browse Videos" 
            onclick={() => handleMobileNavClick(() => push('/about'))}
          >
            <IconVideo />
          </Navigation.Tile>

          <Navigation.Tile 
            labelExpanded="Browse Games" 
            onclick={() => handleMobileNavClick(() => push('/files'))}
          >
            <IconGames />
          </Navigation.Tile>
        {/snippet}

        {#snippet footer()}
          <Navigation.Tile labelExpanded="Settings" href="/settings" title="Settings">
            <IconSettings />
          </Navigation.Tile>
        {/snippet}
      </Navigation.Rail>
    </div>

    <!-- Mobile Main Content - Full Width -->
    <div class="w-full h-full overflow-y-auto p-4 bg-red-300">
      <!-- Mobile Menu Button -->
      <button 
        class="fixed top-4 left-4 z-30 p-2 bg-gray-800 text-white rounded-md"
        on:click={toggleExpanded}
      >
        <IconMenu size={20} />
      </button>
      <Routes />
    </div>
  </div>
{:else}
  <!-- DESKTOP LAYOUT -->
  <div class="grid grid-cols-[auto_1fr] w-full h-full bg-green-200">
    <Navigation.Rail expanded={isExpansed}>
      {#snippet header()}
        <Navigation.Tile labelExpanded="Menu" onclick={toggleExpanded} title="Toggle Menu Width">
          <IconMenu />
        </Navigation.Tile>
      {/snippet}

      {#snippet tiles()}
        <Navigation.Tile labelExpanded="Browse Files" onclick={() => push('/files')}>
          <IconFolder />
        </Navigation.Tile>

        <Navigation.Tile labelExpanded="User Details" onclick={() => push('/user')}>
          <User />
        </Navigation.Tile>

        <Navigation.Tile labelExpanded="Developer testimonials" onclick={() => push('/testimonials')}>
          <IconMusic />
        </Navigation.Tile>

        <Navigation.Tile labelExpanded="Browse Videos" onclick={() => push('/about')}>
          <IconVideo />
        </Navigation.Tile>

        <Navigation.Tile labelExpanded="Browse Games" onclick={() => push('/files')}>
          <IconGames />
        </Navigation.Tile>
      {/snippet}

      {#snippet footer()}
        <Navigation.Tile labelExpanded="Settings" href="/settings" title="Settings">
          <IconSettings />
        </Navigation.Tile>
      {/snippet}
    </Navigation.Rail>

    <div class="overflow-y-auto p-4 md:p-10 lg:p-20 bg-red-300">
      <Routes />
    </div>
  </div>
{/if}

<style>
  /* Ensure smooth transitions */
  * {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>